---
# Source: prometheus-operator/templates/psp.yaml
apiVersion: extensions/v1beta1
kind: PodSecurityPolicy
metadata:
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.27
    heritage: Helm
    release: RELEASE-NAME
  name: RELEASE-NAME-prometheus-operator
spec:
  privileged: false
  # Required to prevent escalations to root.
  # allowPrivilegeEscalation: false
  # This is redundant with non-root + disallow privilege escalation,
  # but we can provide it for defense in depth.
  #requiredDropCapabilities:
  #  - ALL
  # Allow core volume types.
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    # Permits the container to run with root privileges as well.
    rule: 'RunAsAny'
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 0
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 0
        max: 65535
  readOnlyRootFilesystem: false
---
# Source: prometheus-operator/templates/servicemonitor-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-prometheus-operator
data:
  servicemonitor-operator.yaml: |-
      apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      metadata:
        labels:
          app: prometheus-operator
          chart: "prometheus-operator-0.0.27"
          heritage: "Helm"
          release: "RELEASE-NAME"
          prometheus: RELEASE-NAME
        name: prometheus-operator
      spec:
        jobLabel: prometheus-operator
        selector:
          matchLabels:
            operated-prometheus: "true"
        namespaceSelector:
          matchNames:
            - "monitoring"
        endpoints:
        - port: http
          interval: 30s
---
# Source: prometheus-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.27
    heritage: Helm
    release: RELEASE-NAME
  name: RELEASE-NAME-prometheus-operator
imagePullSecrets: 
  []
---
# Source: prometheus-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.27
    heritage: Helm
    release: RELEASE-NAME
  name: RELEASE-NAME-prometheus-operator
rules:
- apiGroups:
  - extensions
  resources:
  - thirdpartyresources
  verbs:
  - "*"
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - "*"
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanager
  - alertmanagers
  - prometheus
  - prometheuses
  - service-monitor
  - servicemonitors
  - prometheusrules
  verbs:
  - "*"
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs: ["*"]
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs: ["*"]
- apiGroups: [""]
  resources:
  - pods
  verbs: ["list", "delete"]
- apiGroups: [""]
  resources:
  - services
  - endpoints
  verbs: ["get", "create", "update"]
- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list", "watch"]
- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["list", "watch"]
---
# Source: prometheus-operator/templates/psp-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.27
    heritage: Helm
    release: RELEASE-NAME
  name: psp-RELEASE-NAME-prometheus-operator
rules:
- apiGroups: ['extensions']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - RELEASE-NAME-prometheus-operator
---
# Source: prometheus-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.27
    heritage: Helm
    release: RELEASE-NAME
  name: RELEASE-NAME-prometheus-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RELEASE-NAME-prometheus-operator
subjects:
  - kind: ServiceAccount
    name: RELEASE-NAME-prometheus-operator
    namespace: monitoring
---
# Source: prometheus-operator/templates/psp-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.27
    heritage: Helm
    release: RELEASE-NAME
  name: psp-RELEASE-NAME-prometheus-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: psp-RELEASE-NAME-prometheus-operator
subjects:
  - kind: ServiceAccount
    name: RELEASE-NAME-prometheus-operator
    namespace: monitoring
---
# Source: prometheus-operator/templates/deployment.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.27
    heritage: Helm
    operator: prometheus
    release: RELEASE-NAME
  name: RELEASE-NAME-prometheus-operator
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus-operator
        operator: prometheus
        release: RELEASE-NAME
    spec:
      containers:
        - name: prometheus-operator
          image: "quay.io/coreos/prometheus-operator:v0.20.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - --kubelet-service=kube-system/kubelet
            - --prometheus-config-reloader=quay.io/coreos/prometheus-config-reloader:v0.20.0
            - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
          ports:
            - containerPort: 8080
              name: http
          resources:
            {}
      serviceAccountName: RELEASE-NAME-prometheus-operator
---
# Source: prometheus-operator/templates/create-servicemonitor-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.27
    heritage: Helm
    release: RELEASE-NAME
  name: RELEASE-NAME-prometheus-operator-create-sm-job
spec:
  template:
    metadata:
      labels:
        app: prometheus-operator
        release: RELEASE-NAME
      name: RELEASE-NAME-prometheus-operator-create-sm-job
    spec:
      containers:
        - name: hyperkube
          image: "quay.io/coreos/hyperkube:v1.7.6_coreos.0"
          imagePullPolicy: "IfNotPresent"
          command:
            - ./kubectl
            - apply 
            - -f 
            - /tmp/servicemonitor/servicemonitor-operator.yaml
          volumeMounts:
            - mountPath: "/tmp/servicemonitor"
              name: tmp-configmap-servicemonitor
      volumes:
        - name: tmp-configmap-servicemonitor
          configMap:
            name: RELEASE-NAME-prometheus-operator
      restartPolicy: OnFailure
      serviceAccountName: RELEASE-NAME-prometheus-operator
---
# Source: prometheus-operator/templates/get-crd-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    app: prometheus-operator
    chart: prometheus-operator-0.0.27
    heritage: Helm
    release: RELEASE-NAME
  name: RELEASE-NAME-prometheus-operator-get-crd
spec:
  template:
    metadata:
      labels:
        app: prometheus-operator
        release: RELEASE-NAME
      name: RELEASE-NAME-prometheus-operator-get-crd
    spec:
      containers:
        - name: hyperkube
          image: "quay.io/coreos/hyperkube:v1.7.6_coreos.0"
          imagePullPolicy: "IfNotPresent"
          command:
            - ./kubectl
            - get
            - customresourcedefinitions
            - alertmanagers.monitoring.coreos.com
            - prometheuses.monitoring.coreos.com
            - servicemonitors.monitoring.coreos.com
      restartPolicy: OnFailure
      serviceAccountName: RELEASE-NAME-prometheus-operator
